<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
/**
 * JobRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobRepository extends EntityRepository
{
    public function searchJobs($searchData)
    {
        $append_where = "";
        if (isset($searchData) && !empty($searchData)) {

            if(isset($searchData["searchKey"]) &&!empty($searchData["searchKey"])) {
                $append_where = " and 
                    (
                        j.title like '%". $searchData["searchKey"] . "%' or
                        j.terse like '%". $searchData["searchKey"] . "%' or
                        j.description like '%". $searchData["searchKey"] . "%'
                    ) ";
            }
            if(isset($searchData["jobCategory"]) && !empty($searchData["jobCategory"])) {
                $objJobCategory = $searchData["jobCategory"];
                $append_where = " and j.job_category_id = ". $objJobCategory->getId() ;
            }

            if(isset($searchData["location"]) && !empty($searchData["location"])) {
                $append_where = " and  j.location like '%". $searchData["location"] . "%'" ;
            }

            if(isset($searchData["jobType"]) && !empty($searchData["jobType"])) {
                $objJobType = $searchData["jobType"];
                $append_where = " and j.job_type_id = ". $objJobType->getId() ;
            }

            if (isset($searchData["dateRange"]) && !empty($searchData["dateRange"])) {
                switch($searchData["dateRange"]) {
                    case 'today':
                        $append_where = " and j.post_date >= UNIX_TIMESTAMP(DATE_FORMAT(NOW(),'%Y-%m-%d')) " ;
                        break;
                    case 'last3days':
                        $append_where = " and j.post_date >= UNIX_TIMESTAMP(DATE_FORMAT(ADDDATE(NOw(),-3),'%Y-%m-%d')) " ;
                        break;
                    case 'last7days':
                        $append_where = " and j.post_date >= UNIX_TIMESTAMP(DATE_FORMAT(ADDDATE(NOw(),-7),'%Y-%m-%d')) " ;
                        break;
                    case 'last14days':
                        $append_where = " and j.post_date >= UNIX_TIMESTAMP(DATE_FORMAT(ADDDATE(NOw(),-14),'%Y-%m-%d')) " ;
                        break;
                    case 'last30days':
                        $append_where = " and j.post_date >= UNIX_TIMESTAMP(DATE_FORMAT(ADDDATE(NOw(),-30),'%Y-%m-%d')) " ;
                        break;
                }
            }
        }
            
        
        
        $query = "select j.* from job j
            where 1=1 " . $append_where . " order by j.post_date desc";
        $jobs = $this->getEntityManager()
            ->getConnection()
            ->prepare($query);
        $jobs->execute();
        return $jobs->fetchAll();
    }

    public function getCategoryFacet($searchkey)
    {
        if (!isset($searchkey)) {
            $searchkey = "";
        }
        $query = "select c.id, c.title,count(j.id) total_job_count from job j
            left join job_category c on j.job_category_id = c.id
            where
                j.title like '%". $searchkey. "%' or
                j.terse like '%". $searchkey. "%' or
                j.description like '%". $searchkey. "%'
            group by j.job_category_id";

        $categories = $this->getEntityManager()
            ->getConnection()
            ->prepare($query);
        //$categories->bindValue('searchkey', $searchkey);
        $categories->execute();
        return $categories->fetchAll();
    }
}
